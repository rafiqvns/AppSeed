# Generated by Django 2.2.19 on 2021-08-14 22:12

from django.db import migrations, models
import django.db.models.deletion
import safe_driver.image_functions


class Migration(migrations.Migration):

    dependencies = [
        ('safe_driver', '0056_auto_20210728_1545'),
    ]

    operations = [
        migrations.CreateModel(
            name='BTWClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, default=None, null=True, verbose_name='Date')),
                ('start_time', models.TimeField(blank=True, default=None, null=True, verbose_name='Start Time')),
                ('end_time', models.TimeField(blank=True, default=None, null=True, verbose_name='End Time')),
                ('driver_signature', models.ImageField(blank=True, default=None, null=True, upload_to=safe_driver.image_functions.signature_image_folder, verbose_name='Driver Signature')),
                ('evaluator_signature', models.ImageField(blank=True, default=None, null=True, upload_to=safe_driver.image_functions.signature_image_folder, verbose_name='Evaluator Signature')),
                ('company_rep_signature', models.ImageField(blank=True, default=None, null=True, upload_to=safe_driver.image_functions.signature_image_folder, verbose_name='Company Rep Signature')),
                ('company_rep_name', models.CharField(blank=True, default=None, max_length=150, null=True, verbose_name='Company Rep. Name')),
                ('map_data', models.TextField(blank=True, null=True, verbose_name='Map Data')),
                ('map_image', models.ImageField(blank=True, null=True, upload_to=safe_driver.image_functions.map_image_folder, verbose_name='Map Image')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='btw_test_class_p', to='safe_driver.StudentTest')),
            ],
            options={
                'verbose_name': 'Behind The Wheel Class P',
                'verbose_name_plural': 'Behind The Wheel Class P',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='PreTripClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, default=None, null=True, verbose_name='Date')),
                ('start_time', models.TimeField(blank=True, default=None, null=True, verbose_name='Start Time')),
                ('end_time', models.TimeField(blank=True, default=None, null=True, verbose_name='End Time')),
                ('driver_signature', models.ImageField(blank=True, default=None, null=True, upload_to=safe_driver.image_functions.signature_image_folder)),
                ('evaluator_signature', models.ImageField(blank=True, default=None, null=True, upload_to=safe_driver.image_functions.signature_image_folder)),
                ('company_rep_signature', models.ImageField(blank=True, default=None, null=True, upload_to=safe_driver.image_functions.signature_image_folder)),
                ('company_rep_name', models.CharField(blank=True, default=None, max_length=150, null=True, verbose_name='Company Rep. Name')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('test', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pretrip_student_test_class_p', to='safe_driver.StudentTest')),
            ],
            options={
                'verbose_name': 'Pre Trip Class P',
                'verbose_name_plural': 'Pre Trips Class P List',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='PreTripVehicleFrontClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body_damage', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Body Damage')),
                ('lights_id_and_others', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Lights-I.D. mkr, head, 4way, road')),
                ('bumper_and_tow_hooks', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Bumper and Tow Hooks')),
                ('license_plate', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='License Plate')),
                ('sensors', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Sensors')),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('pre_trip_class_p', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pretrip_vehicle_front_class_p', to='safe_driver.PreTripClassP')),
            ],
            options={
                'verbose_name': 'Pre Trip Vehicle Front Class P',
                'verbose_name_plural': 'Pre Trip Vehicle Front Class P List',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='PreTripRearOfVehicleClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brake_and_others', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Brake, Tail, 4way, Signal Lights')),
                ('body_condition', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Body Condition')),
                ('reflectors', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Reflectors')),
                ('mud_flaps', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Mud Flaps')),
                ('license_plate_and_light', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Licenses Plate & Light')),
                ('bumper', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Bumper')),
                ('engine_door', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Engine Door')),
                ('tail_pipe', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Tail Pipe')),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('pre_trip_class_p', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pretrip_rear_of_vehicle_class_p', to='safe_driver.PreTripClassP')),
            ],
            options={
                'verbose_name': 'Pre Trip Rear or Vehicle Class P',
                'verbose_name_plural': 'Pre Trip Rear or Vehicle Class P List',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='PreTripRampClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('power_lift', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Power Lift')),
                ('lift_door', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Lift Door')),
                ('buzzer', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Buzzer')),
                ('interlock', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Interlock')),
                ('identification', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Identification')),
                ('lights', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Lights')),
                ('fluid_and_air_leaks', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Fluid & Air Leaks')),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('pre_trip_class_p', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pretrip_ramp_class_p', to='safe_driver.PreTripClassP')),
            ],
            options={
                'verbose_name': 'Pre Trip Ramp Class P',
                'verbose_name_plural': 'Pre Trip Ramp Class P List',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='PreTripPostTripClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Vehicle Condition')),
                ('all_lights', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='All Lights')),
                ('tire_condition', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Tire Condition')),
                ('tire_inflation', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Tire Inflation')),
                ('hub_heat', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Hub Heat')),
                ('reflective_devices', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Reflective Devices')),
                ('fluid_air_leaks', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Fluid & Air Leaks')),
                ('equipment_parked_secure', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Equipement Parked - Secure')),
                ('inerior_clear_and_clean', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Interior Clear & Clean')),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('pre_trip_class_p', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pretrip_posttrip_class_p', to='safe_driver.PreTripClassP')),
            ],
            options={
                'verbose_name': 'Pre Trip PostTrip Class P',
                'verbose_name_plural': 'Pre Trip PostTrip Class P',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='PreTripInteriorOperationClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interior_damage', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Interior Damage')),
                ('interior_cleanlines', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Interior Cleanliness')),
                ('first_aid_kit', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='First Aid Kit (If Applicable)')),
                ('emergency_door_buzzer', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Emergency Door Buzzer')),
                ('seat_belt_cutter', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Seat Belt Cutter')),
                ('seats', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Seats')),
                ('hand_rails', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Hand Rails')),
                ('stop_arm_control', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Stop Arm Control (if applicable)')),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('pre_trip_class_p', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pretrip_interior_operation_class_p', to='safe_driver.PreTripClassP')),
            ],
            options={
                'verbose_name': 'Pre Trip Interior Operations Class P',
                'verbose_name_plural': 'Pre Trip Interior Operations Class P List',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='PreTripInsideCabClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hand_rails', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Hand Rails')),
                ('fire_extinguisher', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Fire Extinguisher')),
                ('fhwa', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='FHWA')),
                ('emergency_response_book', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Emergency Response Book')),
                ('dvir', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='DVIR')),
                ('parking_brake_applied', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Parking Brake Applied')),
                ('transmission_neutral_or_park', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Transmission Neutral/Park')),
                ('seat_adjustment', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Seat Adjustment')),
                ('seat_belt', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Seat Belt')),
                ('cab_or_berth', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Cab/Berth')),
                ('dome_and_map_lights', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Dome and Map Lights')),
                ('windows', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Windows')),
                ('mirros', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Mirrors')),
                ('steering_wheel_play', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Steering Wheel Play')),
                ('horn', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Horn')),
                ('indicators', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Indicators')),
                ('wipers', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Wipers')),
                ('gauges', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Gauges')),
                ('air_heater_defrost', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Air, Heater, Defrost')),
                ('bi_directional_triangles', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Bi-directional Triangles')),
                ('shifter_straight_and_secure', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Shifter Straight and Secure')),
                ('stadee_line_clear', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Stadee Line Clear')),
                ('clear_floor_board', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Clear floor Board')),
                ('pedals', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Pedals')),
                ('park_brake_test', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Park Brake Test')),
                ('service_brake_test', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Service Brake Test')),
                ('trailer_brake_test', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Trailer Brake Test')),
                ('pull_key', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Pull Key')),
                ('exit_safely', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Exit Safely')),
                ('steps', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Steps')),
                ('door_entry_clear', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Door Entry Clear')),
                ('step_lights', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Step Lights')),
                ('emergency_exits_marked_acc', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Emergency Exits Marked Acc')),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('pre_trip_class_p', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pretrip_insidecab_class_p', to='safe_driver.PreTripClassP')),
            ],
            options={
                'verbose_name': 'Pre Trip Inside Cab Class P',
                'verbose_name_plural': 'Pre Trip Inside Cab Class P List',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='PreTripHandyCapClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('power_lift', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Power Lift')),
                ('lift_door', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Lift Door')),
                ('buzzer', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Buzzer')),
                ('interlock', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Interlock')),
                ('indentification', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Identification')),
                ('federal_inspection_or_bit', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Federal Inspection or BIT')),
                ('lights', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Lights')),
                ('fluid_and_air_leaks', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Fluid & Air Leaks')),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('pre_trip_class_p', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pretrip_handycap_class_p', to='safe_driver.PreTripClassP')),
            ],
            options={
                'verbose_name': 'Pre Trip Front or Trailer - Header Board Class P',
                'verbose_name_plural': 'Pre Trip Front or Trailer - Header Board Class P List',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='PreTripEngineCompartmentClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuses', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Fuses')),
                ('hood_latches', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Hood Latches')),
                ('hood_locking_device', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Hood Locking Device')),
                ('engine_oil', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Engine Oil')),
                ('transmission_oil', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Transmission Oil')),
                ('power_steering_fluid', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Power Steering Fluid')),
                ('washer_fluid', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Washer Fluid')),
                ('coolant', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Coolant')),
                ('belts_and_hoses', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Belts and Hoses')),
                ('filters', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Filters')),
                ('components', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Components')),
                ('leaks_air_and_fluid', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Leaks(Air & Fluid)')),
                ('frame', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Frame')),
                ('suspension', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Suspension')),
                ('steering_components', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Steering Components')),
                ('brake_chambers_or_slack_adj', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Brake Chambers/Slack Adjustors')),
                ('brake_drums_and_pads', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Brake Drums & Pads')),
                ('wheel_bearings', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Wheel Bearings')),
                ('tire_inflation', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Tire Inflation')),
                ('tire_and_rim_condition', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Tire & Rim Condition')),
                ('valve_stems_and_hub_oil', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Valve Stems & Hub Oil')),
                ('mud_flaps', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Mud Flaps')),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('pre_trip_class_p', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pretrip_engine_compartment_class_p', to='safe_driver.PreTripClassP')),
            ],
            options={
                'verbose_name': 'Pre Trip Engine Compartment Class P',
                'verbose_name_plural': 'Pre Trip Engine Compartment Class P List',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='PreTripCOALSClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chock_wheels', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Chock Wheels')),
                ('cut_in', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Cut in')),
                ('cut_out', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Cut out')),
                ('applied_air_leak_test', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Applied Air Leak Test')),
                ('low_air_warning', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Low Air Warning')),
                ('spring_test', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Spring Test')),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('pre_trip_class_p', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pretrip_coals_class_p', to='safe_driver.PreTripClassP')),
            ],
            options={
                'verbose_name': 'Pre Trip COALS Class P',
                'verbose_name_plural': 'Pre Trip COALS Class P List',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='PreTripCargoAreaClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_cargo_door', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='All Cargo Door')),
                ('cargo_load_area', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Cargo, Load, Area')),
                ('all_securing_devices', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='All Securing Devices')),
                ('cargo_doors_hinges', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Card Doors Hinges')),
                ('door_locking_devices', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Door Locking Devices')),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('pre_trip_class_p', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pretrip_cargo_area_class_p', to='safe_driver.PreTripClassP')),
            ],
            options={
                'verbose_name': 'Pre Trip Cargo Area Class P',
                'verbose_name_plural': 'Pre Trip Cargo Area Class P List',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='PreTripBothSidesVehiclesClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mirrors', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Mirrors')),
                ('vehicle_markings_or_decals', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Vehicle Markings/Decals')),
                ('dots', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='DOT’s, CA, MC #’s')),
                ('ifta_permit', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='IFTA Permit')),
                ('air_tanks', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Air Tanks')),
                ('fuel_tank_alternative', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Fuel Tank - Alternative Fuel')),
                ('_def', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='DEF')),
                ('battery_box', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Battery Box')),
                ('cargo_compartment_door', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Cargo Compartment Door')),
                ('engine_doors', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Engine Doors')),
                ('frame', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Frame')),
                ('side_flectors', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Side Flectors')),
                ('mud_flaps', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Mud Flaps')),
                ('drive_line', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Drive Line')),
                ('air_cans_or_lines', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Air Cans/Lines')),
                ('brake_chambers_or_slack_adj', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Brake Chambers/Slack Adj')),
                ('suspension', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Suspension')),
                ('brake_drums_and_lining', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Brake Drums & Lining')),
                ('tire_inflation', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Tire Inflation')),
                ('tire_and_rim_condition', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Tire & Rim Condition - Space')),
                ('valve_stem_and_hub_oil', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Valve Stem & Hub Oil')),
                ('body_condition', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Body Condition')),
                ('windows', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Windows')),
                ('stop_arm', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Stop Arm')),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('pre_trip_class_p', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pretrip_both_sides_vehicle_class_p', to='safe_driver.PreTripClassP')),
            ],
            options={
                'verbose_name': 'Pre Trip Both Sides Vehicles Class P',
                'verbose_name_plural': 'Pre Trip Both Sides Vehicles Class P List',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWTurningClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signals_correctly', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Signals correctly')),
                ('gets_in_proper_time', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Gets in proper lane')),
                ('downshifts_to_pulling_gear', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Downshifts to pulling gear')),
                ('handles_light_correctly', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Handles light correctly')),
                ('setup_and_execution', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Set up and execution')),
                ('turn_speed', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Turn Speed')),
                ('mirror_follow_up', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Mirror follow up')),
                ('turns_lane_to_lane', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Turns lane to lane')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_turning_class_p', to='safe_driver.BTWClassP')),
            ],
            options={
                'verbose_name': 'BTW - Turning Class P',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWSteeringClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('over_steers', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Over Steers')),
                ('floats', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Floats')),
                ('poisture_and_grip', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Posture and Grip')),
                ('centered_in_lane', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Centered in lane')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_steering_class_p', to='safe_driver.BTWClassP')),
            ],
            options={
                'verbose_name': 'BTW - Steering Class P',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWStartEngineClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('park_brake_applied', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Park Brake Applied')),
                ('trans_in_neutral', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Trans in Neutral')),
                ('uses_starter_properly', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Uses Starter Properly')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_start_engine_class_p', to='safe_driver.BTWClassP')),
            ],
            options={
                'verbose_name': 'BTW Start Engine Class P',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWSpeedClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adjust_to_conditions', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Adjust to conditions')),
                ('speed', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Speed')),
                ('proper_following_distance', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Proper Following distance')),
                ('speed_on_curves', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Speed on Curves')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_speed_class_p', to='safe_driver.BTWClassP')),
            ],
            options={
                'verbose_name': 'BTW - Speed Class P',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWRecognizesHazardsClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uses_horn', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Uses Horn to communicate')),
                ('makes_adjustments', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Makes Adjustments')),
                ('path_of_least_resistance', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Path of least resistance')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_recognizes_hazards_class_p', to='safe_driver.BTWClassP')),
            ],
            options={
                'verbose_name': 'BTW - Recognizes Hazards Class P',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWRailroadCrossingClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signal_and_activate_4_ways', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Signal & Activate 4-ways')),
                ('stop_prior', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Stop 10’ to 50’ prior')),
                ('open_window_and_door', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Open window & door')),
                ('look_listen_clear', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Look, Listen & Clear')),
                ('signal_and_merge_into_traffic', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Signal & merge into traffic')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_railroad_crossing_class_p', to='safe_driver.BTWClassP')),
            ],
            options={
                'verbose_name': 'BTW - Railroad Crossing Class P',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWPassingClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sufficient_space_to_pass', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Sufficient Space to Pass')),
                ('signals_property', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Signals Property')),
                ('check_mirrors', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Checks Mirrors')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_passing_class_p', to='safe_driver.BTWClassP')),
            ],
            options={
                'verbose_name': 'BTW - Passing Class P',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWPassengerSafetyClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_one_past_standee_line', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='No One Past Standee Line')),
                ('steps_clear', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Steps Clear')),
                ('everyone_seated', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Everyone Seated')),
                ('seatbelts_on', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Seatbelts On (if required)')),
                ('holding_hand_rails_standing', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Holding Hand Rails Standing')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_passenger_safety_class_p', to='safe_driver.BTWClassP')),
            ],
            options={
                'verbose_name': 'BTW Passenger Safety Class P',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWParkingClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('does_not_hit_curb', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Doesn’t hit curb')),
                ('curbs_wheels', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Curbs wheels')),
                ('chock_wheels', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Chock wheels (if required)')),
                ('park_brake_applied', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Park Brake applied')),
                ('trans_in_neutral', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Trans in neutral')),
                ('engine_off', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Engine off - Take keys')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_parking_class_p', to='safe_driver.BTWClassP')),
            ],
            options={
                'verbose_name': 'BTW - Parking Class P',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWLightsAndSignalsClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proper_use_of_lights', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Proper use of lights')),
                ('adjust_speed', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Adjust Speed')),
                ('signals_well_in_advance', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Signals well in advance')),
                ('cancels_signal', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Cancels signal')),
                ('use_of_4_ways', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Use of 4 Ways')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_lights_and_signals_class_p', to='safe_driver.BTWClassP')),
            ],
            options={
                'verbose_name': 'BTW - Lights and Signals Class P',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWIntersectionsClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approach_decision_point', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Approach -decision point')),
                ('clear_intersection', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Clear Intersection L-R-L')),
                ('check_mirrors', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Check Mirrors')),
                ('full_stop', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Full stop when needed')),
                ('times_light_or_starts', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Times light or starts too fast')),
                ('steering_axel_staright', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Steering axel straight')),
                ('yields_right_of_way', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Yields right-of-way')),
                ('proper_speed_or_gear', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Proper speed/gear')),
                ('leaves_space', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Leaves space for an out')),
                ('stop_lines', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Stop Lines - crosswalks')),
                ('railroad_crossings', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Railroad crossings')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_intersections_class_p', to='safe_driver.BTWClassP')),
            ],
            options={
                'verbose_name': 'BTW - Intersections Class P',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWInternalEnvironmentClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_aid', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Driver Aid')),
                ('interior_passenger_mirror_check', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Interior Passenger Mirror Check')),
                ('safe_path', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Safe Path')),
                ('maintain_proper_grip', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Maintain Proper Grip')),
                ('smooth_driving_movements', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Smooth Driving Movements')),
                ('maintain_comfortable_environment', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Maintain a Comfortable Environment')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_internal_environment_class_p', to='safe_driver.BTWClassP')),
            ],
            options={
                'verbose_name': 'BTW - Internal Environtment Class P',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWHillsClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proper_gear_up_down', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Proper gear up or down')),
                ('avoids_rolling_back', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Avoids rolling back H/V')),
                ('test_brakes_prior', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Test brakes prior')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_hills_class_p', to='safe_driver.BTWClassP')),
            ],
            options={
                'verbose_name': 'BTW - Hills Class P',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWGeneralSafetyAndDOTAdherenceClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avoids_crowding_effect', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Avoids crowding effect')),
                ('stays_right_or_correct_lane', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Stays to the right/correct lane')),
                ('aware_hours_of_service', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Aware of hours of service')),
                ('proper_use_off_mirrors', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Proper use of mirrors')),
                ('self_confident_not_complacement', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Self confident not complacent')),
                ('check_instruments', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Checks instruments')),
                ('uses_horn_properly', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Uses horn properly')),
                ('maintains_dot_log', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Maintains DOT log')),
                ('drives_defensively', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Drives defensively')),
                ('company_haz_mat_protocol', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Company Haz Mat protocol')),
                ('air_cans_or_line_moisture_free', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Air cans/lines free of moisture')),
                ('avoid_distractions_while_driving', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Avoid distractions while driving')),
                ('works_safely_to_avoid_injuries', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Works safely to avoid injuries')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_general_safety_class_p', to='safe_driver.BTWClassP')),
            ],
            options={
                'verbose_name': 'BTW - General Safety and DOT adherence Class P',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWEyeMovementAndMirrorClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eyes_ahead', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Eyes ahead')),
                ('follow_up_in_mirror', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Follow-up in mirror')),
                ('checks_mirror', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Checks mirrors 5 to 8 sec’s')),
                ('scans_does_not_stare', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Scans doesn’t stare')),
                ('avoid_billboards', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Avoid Billboards')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_eye_movement_and_mirror_class_p', to='safe_driver.BTWClassP')),
            ],
            options={
                'verbose_name': 'BTW - Eye movement and mirror use Class P',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWEngineOperationClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lugging', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Lugging')),
                ('check_gauges', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Check Gauges')),
                ('start_off_smoothly', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Start Off Smoothly')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_engine_operation_class_p', to='safe_driver.BTWClassP')),
            ],
            options={
                'verbose_name': 'BTW Engine Operation Class P',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWCabSafetyClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_belt', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Seat Belt')),
                ('cab_distractions', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Cab distractions')),
                ('cab_obstructions', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Cab Obstructions')),
                ('cab_chemicals', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Cab Chemicals')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_cab_safety_class_p', to='safe_driver.BTWClassP')),
            ],
            options={
                'verbose_name': 'BTW Cab Safety Class P',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWBrakesAndStoppingsClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checks_rear_or_gives_warning', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Checks rear/gives warning')),
                ('full_stop_or_smooth', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Full Stop/Smooth(no rebound)')),
                ('does_not_fan', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Doesn’t fan')),
                ('down_shifts', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Down Shifts')),
                ('uses_foot_brake_only', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Uses foot brake only')),
                ('hand_valve_use', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Hand valve use')),
                ('does_not_roll_back', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Doesn’t roll back')),
                ('engine_assist', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Engine Assist')),
                ('avoids_sudden_stops', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Avoids sudden stops')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_brakes_and_stoppingclass_p', to='safe_driver.BTWClassP')),
            ],
            options={
                'verbose_name': 'BTW - Use of Brakes and Stopping Class P',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWBackingClassP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size_up_situation', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Size up situation')),
                ('driver_side_back', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Driver side back')),
                ('check_rear', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Check rear')),
                ('gets_attention', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Gets Attention')),
                ('backs_slowly', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Backs slowly')),
                ('rechecks_conditions', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Re-checks conditions')),
                ('uses_other_aids', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Uses other aids')),
                ('steers_correctly', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Steers correctly')),
                ('does_not_hit_dock', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Doesn’t hit dock')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_backing_class_p', to='safe_driver.BTWClassP')),
            ],
            options={
                'verbose_name': 'BTW - Backing Class P',
                'ordering': ('-created',),
            },
        ),
    ]
