# Generated by Django 2.2.17 on 2021-02-17 10:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('safe_driver', '0008_auto_20210217_0559'),
    ]

    operations = [
        migrations.CreateModel(
            name='BTWBus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, default=None, null=True, verbose_name='Date')),
                ('start_time', models.TimeField(blank=True, default=None, null=True, verbose_name='Start Time')),
                ('end_time', models.TimeField(blank=True, default=None, null=True, verbose_name='End Time')),
                ('driver_signature', models.ImageField(blank=True, default=None, null=True, upload_to='signatures/btw/driver/', verbose_name='Driver Signature')),
                ('evaluator_signature', models.ImageField(blank=True, default=None, null=True, upload_to='signatures/btw/evaluator/', verbose_name='Evaluator Signature')),
                ('company_rep_signature', models.ImageField(blank=True, default=None, null=True, upload_to='signatures/btw/company/', verbose_name='Company Rep Signature')),
                ('company_rep_name', models.CharField(blank=True, default=None, max_length=150, null=True, verbose_name='Company Rep. Name')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='btw_test_bus', to='safe_driver.StudentTest')),
            ],
            options={
                'verbose_name': 'Behind The Wheel Bus',
                'verbose_name_plural': 'Behind The Wheel Bus',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='PreTripBus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, default=None, null=True, verbose_name='Date')),
                ('start_time', models.TimeField(blank=True, default=None, null=True, verbose_name='Start Time')),
                ('end_time', models.TimeField(blank=True, default=None, null=True, verbose_name='End Time')),
                ('driver_signature', models.ImageField(blank=True, default=None, null=True, upload_to='signatures/pre-trip/driver/')),
                ('evaluator_signature', models.ImageField(blank=True, default=None, null=True, upload_to='signatures/pre-trip/evaluator/')),
                ('company_rep_signature', models.ImageField(blank=True, default=None, null=True, upload_to='signatures/pre-trip/company/')),
                ('company_rep_name', models.CharField(blank=True, default=None, max_length=150, null=True, verbose_name='Company Rep. Name')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('test', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pretrip_student_test_bus', to='safe_driver.StudentTest')),
            ],
            options={
                'verbose_name': 'Pre Trip Bus',
                'verbose_name_plural': 'Pre Trips Bus',
                'ordering': ('-created',),
            },
        ),
        migrations.AlterModelOptions(
            name='proditem',
            options={'ordering': ('-created',), 'verbose_name': 'Prod Item', 'verbose_name_plural': 'Prod Items'},
        ),
        migrations.AlterModelOptions(
            name='safedriveprod',
            options={'ordering': ('-created',), 'verbose_name': 'Prod', 'verbose_name_plural': 'Prods'},
        ),
        migrations.RenameField(
            model_name='pretripenginecompartmentclassa',
            old_name='tire_and_rin_condition',
            new_name='tire_and_rim_condition',
        ),
        migrations.AlterField(
            model_name='proditem',
            name='prod',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prod_item', to='safe_driver.SafeDriveProd'),
        ),
        migrations.CreateModel(
            name='PreTripVehicleFrontBus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body_damage', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Body Damage')),
                ('lights_id_and_others', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Lights-I.D. mkr, head, 4way, road')),
                ('bumper_and_tow_hooks', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Bumper and Tow Hooks')),
                ('license_plate', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='License Plate')),
                ('sensors', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Sensors')),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('pre_trip_bus', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pretrip_vehicle_front_bus', to='safe_driver.PreTripBus')),
            ],
            options={
                'verbose_name': 'Pre Trip Vehicle Front Bus',
                'verbose_name_plural': 'Pre Trip Vehicle Front Bus List',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='PreTripRearOfVehicleBus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brake_and_others', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Brake, Tail, 4way, Signal Lights')),
                ('body_condition', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Body Condition')),
                ('reflectors', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Reflectors')),
                ('mud_flaps', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Mud Flaps')),
                ('license_plate_and_light', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Licenses Plate & Light')),
                ('bumper', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Bumper')),
                ('engine_door', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Engine Door')),
                ('tail_pipe', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Tail Pipe')),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('pre_trip_bus', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pretrip_rear_of_vehicle_bus', to='safe_driver.PreTripBus')),
            ],
            options={
                'verbose_name': 'Pre Trip Rear or Vehicle Bus',
                'verbose_name_plural': 'Pre Trip Rear or Vehicle Bus List',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='PreTripPostTripBus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Vehicle Condition')),
                ('all_lights', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='All Lights')),
                ('tire_condition', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Tire Condition')),
                ('tire_inflation', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Tire Inflation')),
                ('hub_heat', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Hub Heat')),
                ('reflective_devices', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Reflective Devices')),
                ('fluid_air_leaks', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Fluid & Air Leaks')),
                ('equipment_parked_secure', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Equipement Parked - Secure')),
                ('inerior_clear_and_clean', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Interior Clear & Clean')),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('pre_trip_bus', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pretrip_posttrip_bus', to='safe_driver.PreTripBus')),
            ],
            options={
                'verbose_name': 'Pre Trip PostTrip Bus',
                'verbose_name_plural': 'Pre Trip PostTrip Bus',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='PreTripInsideCabBus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hand_rails', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Hand Rails')),
                ('fire_extinguisher', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Fire Extinguisher')),
                ('fhwa', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='FHWA')),
                ('emergency_response_book', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Emergency Response Book')),
                ('dvir', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='DVIR')),
                ('parking_brake_applied', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Parking Brake Applied')),
                ('transmission_neutral_or_park', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Transmission Neutral/Park')),
                ('seat_adjustment', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Seat Adjustment')),
                ('seat_belt', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Seat Belt')),
                ('cab_or_berth', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Cab/Berth')),
                ('dome_and_map_lights', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Dome and Map Lights')),
                ('windows', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Windows')),
                ('mirros', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Mirrors')),
                ('steering_wheel_play', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Steering Wheel Play')),
                ('horn', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Horn')),
                ('indicators', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Indicators')),
                ('wipers', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Wipers')),
                ('gauges', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Gauges')),
                ('air_heater_defrost', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Air, Heater, Defrost')),
                ('bi_directional_triangles', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Bi-directional Triangles')),
                ('shifter_straight_and_secure', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Shifter Straight and Secure')),
                ('stadee_line_clear', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Stadee Line Clear')),
                ('clear_floor_board', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Clear floor Board')),
                ('pedals', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Pedals')),
                ('park_brake_test', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Park Brake Test')),
                ('service_brake_test', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Service Brake Test')),
                ('trailer_brake_test', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Trailer Brake Test')),
                ('pull_key', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Pull Key')),
                ('exit_safely', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Exit Safely')),
                ('steps', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Steps')),
                ('door_entry_clear', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Door Entry Clear')),
                ('step_lights', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Step Lights')),
                ('emergency_exits_marked_acc', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Emergency Exits Marked Acc')),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('pre_trip_bus', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pretrip_insidecab_bus', to='safe_driver.PreTripBus')),
            ],
            options={
                'verbose_name': 'Pre Trip Inside Cab Bus',
                'verbose_name_plural': 'Pre Trip Inside Cab Bus List',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='PreTripHandyCapBus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('power_lift', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Power Lift')),
                ('lift_door', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Lift Door')),
                ('buzzer', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Buzzer')),
                ('interlock', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Interlock')),
                ('indentification', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Identification')),
                ('federal_inspection_or_bit', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Federal Inspection or BIT')),
                ('lights', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Lights')),
                ('fluid_and_air_leaks', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Fluid & Air Leaks')),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('pre_trip_bus', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pretrip_handycap_bus', to='safe_driver.PreTripBus')),
            ],
            options={
                'verbose_name': 'Pre Trip Front or Trailer - Header Board Bus',
                'verbose_name_plural': 'Pre Trip Front or Trailer - Header Board Bus List',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='PreTripEngineCompartmentBus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuses', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Fuses')),
                ('hood_latches', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Hood Latches')),
                ('hood_locking_device', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Hood Locking Device')),
                ('engine_oil', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Engine Oil')),
                ('transmission_oil', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Transmission Oil')),
                ('power_steering_fluid', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Power Steering Fluid')),
                ('washer_fluid', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Washer Fluid')),
                ('coolant', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Coolant')),
                ('belts_and_hoses', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Belts and Hoses')),
                ('filters', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Filters')),
                ('components', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Components')),
                ('leaks_air_and_fluid', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Leaks(Air & Fluid)')),
                ('frame', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Frame')),
                ('suspension', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Suspension')),
                ('steering_components', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Steering Components')),
                ('brake_chambers_or_slack_adj', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Brake Chambers/Slack Adjustors')),
                ('brake_drums_and_pads', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Brake Drums & Pads')),
                ('wheel_bearings', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Wheel Bearings')),
                ('tire_inflation', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Tire Inflation')),
                ('tire_and_rim_condition', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Tire & Rim Condition')),
                ('valve_stems_and_hub_oil', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Valve Stems & Hub Oil')),
                ('mud_flaps', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Mud Flaps')),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('pre_trip_bus', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pretrip_engine_compartment_bus', to='safe_driver.PreTripBus')),
            ],
            options={
                'verbose_name': 'Pre Trip Engine Compartment Bus',
                'verbose_name_plural': 'Pre Trip Engine Compartment Bus List',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='PreTripCOALSBus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chock_wheels', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Chock Wheels')),
                ('cut_in', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Cut in')),
                ('cut_out', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Cut out')),
                ('applied_air_leak_test', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Applied Air Leak Test')),
                ('low_air_warning', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Low Air Warning')),
                ('spring_test', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Spring Test')),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('pre_trip_bus', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pretrip_coals_bus', to='safe_driver.PreTripBus')),
            ],
            options={
                'verbose_name': 'Pre Trip COALS Bus',
                'verbose_name_plural': 'Pre Trip COALS Bus List',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='PreTripBothSidesVehiclesBus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mirrors', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Mirrors')),
                ('vehicle_markings_or_decals', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Vehicle Markings/Decals')),
                ('dots', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='DOT’s, CA, MC #’s')),
                ('ifta_permit', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='IFTA Permit')),
                ('air_tanks', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Air Tanks')),
                ('fuel_tank_alternative', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Fuel Tank - Alternative Fuel')),
                ('_def', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='DEF')),
                ('battery_box', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Battery Box')),
                ('cargo_compartment_door', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Cargo Compartment Door')),
                ('engine_doors', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Engine Doors')),
                ('frame', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Frame')),
                ('side_flectors', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Side Flectors')),
                ('mud_flaps', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Mud Flaps')),
                ('drive_line', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Drive Line')),
                ('air_cans_or_lines', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Air Cans/Lines')),
                ('brake_chambers_or_slack_adj', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Brake Chambers/Slack Adj')),
                ('suspension', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Suspension')),
                ('brake_drums_and_lining', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Brake Drums & Lining')),
                ('tire_inflation', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Tire Inflation')),
                ('tire_and_rim_condition', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Tire & Rim Condition - Space')),
                ('valve_stem_and_hub_oil', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Valve Stem & Hub Oil')),
                ('body_condition', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Body Condition')),
                ('windows', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Windows')),
                ('stop_arm', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Stop Arm')),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('pre_trip_bus', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pretrip_both_sides_vehicle_bus', to='safe_driver.PreTripBus')),
            ],
            options={
                'verbose_name': 'Pre Trip Both Sides Vehicles Bus',
                'verbose_name_plural': 'Pre Trip Both Sides Vehicles Bus List',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWSteeringBus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('over_steers', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Over Steers')),
                ('floats', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Floats')),
                ('poisture_and_grip', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Posture and Grip')),
                ('centered_in_lane', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Centered in lane')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_steering_bus', to='safe_driver.BTWBus')),
            ],
            options={
                'verbose_name': 'BTW - Steering Bus',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWStartEngineBus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('park_brake_applied', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Park Brake Applied')),
                ('trans_in_neutral', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Trans in Neutral')),
                ('uses_starter_properly', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Uses Starter Properly')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_start_engine_bus', to='safe_driver.BTWBus')),
            ],
            options={
                'verbose_name': 'BTW Start Engine Bus',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWSpeedBus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adjust_to_conditions', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Adjust to conditions')),
                ('speed', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Speed')),
                ('proper_following_distance', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Proper Following distance')),
                ('speed_on_curves', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Speed on Curves')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_speed_bus', to='safe_driver.BTWBus')),
            ],
            options={
                'verbose_name': 'BTW - Speed Bus',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWRecognizesHazardsBus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uses_horn', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Uses Horn to communicate')),
                ('makes_adjustments', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Makes Adjustments')),
                ('path_of_least_resistance', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Path of least resistance')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_recognizes_hazards_bus', to='safe_driver.BTWBus')),
            ],
            options={
                'verbose_name': 'BTW - Recognizes Hazards Bus',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWPassengerSafetyBus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_one_past_standee_line', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='No One Past Standee Line')),
                ('steps_clear', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Steps Clear')),
                ('everyone_seated', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Everyone Seated')),
                ('seatbelts_on', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Seatbelts On (if required)')),
                ('holding_hand_rails_standing', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Holding Hand Rails Standing')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_passenger_safety_bus', to='safe_driver.BTWBus')),
            ],
            options={
                'verbose_name': 'BTW PAS - Passenger Safety',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWLightsAndSignalsBus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proper_use_of_lights', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Proper use of lights')),
                ('adjust_speed', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Adjust Speed')),
                ('signals_well_in_advance', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Signals well in advance')),
                ('cancels_signal', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Cancels signal')),
                ('use_of_4_ways', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Use of 4 Ways')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_lights_and_signals_bus', to='safe_driver.BTWBus')),
            ],
            options={
                'verbose_name': 'BTW - Lights and Signals Bus',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWEyeMovementAndMirrorBus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eyes_ahead', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Eyes ahead')),
                ('follow_up_in_mirror', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Follow-up in mirror')),
                ('checks_mirror', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Checks mirrors 5 to 8 sec’s')),
                ('scans_does_not_stare', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Scans doesn’t stare')),
                ('avoid_billboards', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Avoid Billboards')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_eye_movement_and_mirror_bus', to='safe_driver.BTWBus')),
            ],
            options={
                'verbose_name': 'BTW - Eye movement and mirror use Bus',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWEngineOperationBus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lugging', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Lugging')),
                ('check_gauges', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Check Gauges')),
                ('start_off_smoothly', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Start Off Smoothly')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_engine_operation_bus', to='safe_driver.BTWBus')),
            ],
            options={
                'verbose_name': 'BTW Engine Operation Bus',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWCabSafetyBus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_belt', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Seat Belt')),
                ('cab_distractions', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Cab distractions')),
                ('cab_obstructions', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Cab Obstructions')),
                ('cab_chemicals', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Cab Chemicals')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_cab_safety_bus', to='safe_driver.BTWBus')),
            ],
            options={
                'verbose_name': 'BTW Cab Safety Bus',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWBrakesAndStoppingsBus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checks_rear_or_gives_warning', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Checks rear/gives warning')),
                ('full_stop_or_smooth', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Full Stop/Smooth(no rebound)')),
                ('does_not_fan', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Doesn’t fan')),
                ('down_shifts', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Down Shifts')),
                ('uses_foot_brake_only', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Uses foot brake only')),
                ('hand_valve_use', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Hand valve use')),
                ('does_not_roll_back', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Doesn’t roll back')),
                ('engine_assist', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Engine Assist')),
                ('avoids_sudden_stops', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Avoids sudden stops')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_brakes_and_stopping_bus', to='safe_driver.BTWBus')),
            ],
            options={
                'verbose_name': 'BTW - Use of Brakes and Stopping Bus',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BTWBackingBus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size_of_situation', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Size up situation')),
                ('driver_side_back', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Driver side back')),
                ('check_rear', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Check rear')),
                ('gets_attention', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Gets Attention')),
                ('backs_slowly', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Backs slowly')),
                ('rechecks_conditions', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Re-checks conditions')),
                ('uses_other_aids', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Uses other aids')),
                ('steers_correctly', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Steers correctly')),
                ('does_not_hit_dock', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (0, 'N/A')], default=0, verbose_name='Doesn’t hit dock')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('btw', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btw_backing_bus', to='safe_driver.BTWBus')),
            ],
            options={
                'verbose_name': 'BTW - Backing Bus',
                'ordering': ('-created',),
            },
        ),
    ]
